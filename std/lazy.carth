(import macros)
(import sync)
(import io)

(data (Lazy a)
  (Lazy [Mutex (Box (Either (Fun [Unit] a) a))]))

(defun strict [(Lazy [mx ptr])] :of (forall (a) (Fun [(Lazy a)] a))
  (seq (mutex/lock mx)
       (match (deref ptr)
         (case (Left f)
               (let ((x (f Unit)))
                 (apps seq
                       (store (Right x) ptr)
                       (mutex/release mx)
                       x)))
         (case (Right x) (seq (mutex/release mx) x)))))
