(type (List a)
  Nil
  (List a (List a)))

(type (Maybe a)
  None
  (Some a))

(define (main _)
  (let [[xs (List 42 (List 69 Nil))]]
    (printInt (head (tail xs)))))

(define: (head xs)
    (forall [a] (Fun (List a) (Maybe a)))
  (match xs
    [Nil None]
    [(List x _) (Some x)]))

(define: tail
    (forall [a] (Fun (List a) (Maybe (List a))))
  (fun (ys)
    (match ys
      [Nil None]
      [(List _ xs) (Some xs)])))
