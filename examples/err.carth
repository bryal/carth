(import std)

;; Start not defined
(define (start _) (undefined unit))

;; Invalid user type signature
;; (define: (invalid-user-type-signature x)
;;     (forall [a b c] (Fun a a))
;;   x)

;; Arity mismatch for constructor
;; (define arity-mismatch-for-constructor
;;   (match (Integ 1)
;;     [(Integ foo bar) foo]))

;; Conflicting definitions of variables in pattern
;; (define conflicting-defs-in-pat
;;   (match (IntPair 1 2)
;;     [(IntPair a a) a]))

;; Undefined constructor
;; (define undef-ctor ThisCtorIsUndefined)

;; Undefined variable
;; (define undef-var this-var-is-undefined)

;; Infinite type
;; (define infinite-type (Wrap infinite-type))

;; Type mismatch
;; (define type-mismatch (Integ "foo"))

;; Conflicting definitions for type
;; (type Foo)
;; (type Foo)

;; Conflicting definitions for constructor
;; a)
;; (type Foo Bar Bar)
;; b)
;; (type Baz Baz)
;; (type Quux Baz)

;; Redundant case in pattern match
;; (define foo
;;   (fun-match
;;     (case true 0)
;;     (case true 1)
;;     (case false 2)))

;; Inexhaustive patterns
;; (define foo
;;   (fun-match
;;     (case true 0)))

;; Extern is not monomorphic
;; (extern foo (Fun a Int))

;; Found hole
;; (define foo
;;   _)

;; Type has infinite size due to recursion
;; (type Foo (Foo Foo))

;; Undefined type
;; a)
;; (type Foo (Foo Bar))
;; b)
;; TODO: This one compiles
;; (define: foo
;;     (Fun Int Foo)
;;   (undefined unit))

;; Could not fully infer type of expression. Unbound type variable.
;; (define foo
;;   (seq (undefined unit)
;;        123))

;; Incorrect type of start
;; (define: start
;;     Int
;;   (undefined unit))

;; Non-function variable definition is recursive
;; (define: foo
;;     Int
;;   (+ foo 1))

;; Arity mismatch for instantiation of type
;; a)
;; (type Foo (Foo List))
;; b)
;; TODO: This is not an error, but should be
;; (define: foo
;;     (Fun Int List)
;;   (undefined unit))

;; Duplicate definition
;; TODO: This is not an error, but should be
;; (define foo +)
;; (define foo -)

;; Helpers
(type (Wrap a) (Wrap a))
(type Integ (Integ Int))
(type IntPair (IntPair Int Int))
