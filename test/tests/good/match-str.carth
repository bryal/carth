;; 1337

;; A primitive stack calculator

(import std)

(defvar main
  ((apps <o display show-int first!)
   (eval (list 30 1000)
         (list "dup"
               "10"
               "mul"
               "swap"
               "7"
               "add"
               "add"
               "add"))))

(defun eval [stack instrs]

  (defun eval-instr
    (case ["add"] (let (([a stack] (list/uncons! stack))
                        ([b stack] (list/uncons! stack)))
                    (list/cons (+ a b) stack)))
    (case ["mul"] (let (([a stack] (list/uncons! stack))
                        ([b stack] (list/uncons! stack)))
                    (list/cons (* a b) stack)))
    (case ["swap"] (let (([a stack] (list/uncons! stack))
                         ([b stack] (list/uncons! stack)))
                     (list/append (list b a) stack)))
    (case ["dup"] (list/cons (first! stack) stack))
    (case [num-s] (list/cons (unwrap! (parse-int num-s)) stack)))
  
  (match (list/uncons instrs)
    (case None
          stack)
    (case (Some [instr instrs])
          (eval (eval-instr instr) instrs))))
